<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
       default-lazy-init="false" default-autowire="no">

    <bean id="apps.dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${zw.jdbc.driverClass}"/>

        <property name="url" value="${zw.jdbc.url}" />
        <property name="username" value="${zw.jdbc.username}" />
        <property name="password" value="${zw.jdbc.password}" />

        <property name="maxActive" value="${zw.jdbc.pool.max.size}" />
        <property name="initialSize" value="${zw.jdbc.pool.init.size}" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />

        <property name="timeBetweenEvictionRunsMillis" value="3000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x' FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- mysql 不支持 poolPreparedStatements-->
        <!--<property name="poolPreparedStatements" value="true" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->

        <!-- 开启Druid的监控统计功能 -->
        <property name="filters" value="stat" />

    </bean>

    <bean id="apps.sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- <property name="namingStrategy">
            <bean class="com.telecom.ctu.framework.domain.CTUImprovedNamingStrategy" />
        </property> -->
        <property name="dataSource" ref="apps.dataSource" />
        <property name="hibernateProperties" value="classpath*:hibernate.properties" />
        <!-- 指定namedQuery配置文件位置 -->
        <property name="mappingDirectoryLocations" value="classpath*:/example/hibernate" />
        <property name="packagesToScan" value="com.zwlj.app.**.model.**" />
    </bean>

    <!-- 如果要实现多租户的配置事物,必须自己实现transactionManager -->
    <bean id="apps.transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="apps.sessionFactory" />
    </bean>

    <!-- 对于service使用annotation声明事物 -->
    <tx:annotation-driven mode="proxy" proxy-target-class="true" transaction-manager="apps.transactionManager"
                          order="100" />

    <tx:advice id="apps.dao.txAdvice" transaction-manager="apps.transactionManager">
        <tx:attributes>
            <tx:method name="get*" isolation="READ_COMMITTED" read-only="true" />
            <tx:method name="list*" isolation="READ_COMMITTED" read-only="true" />
            <tx:method name="find*" isolation="READ_COMMITTED" read-only="true" />
            <tx:method name="search*" isolation="READ_COMMITTED" read-only="true" />
            <tx:method name="query*" isolation="READ_COMMITTED" read-only="true" />
            <tx:method name="load*" isolation="READ_COMMITTED" read-only="true" />
            <tx:method name="*" isolation="READ_COMMITTED" />
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:advisor pointcut="execution(* com.zwlj.app..service..*.*(..))" advice-ref="apps.dao.txAdvice" order="200" />
        <!--
        <aop:advisor pointcut="execution(* com.longtime.app..dao..*.*(..))" advice-ref="apps.dao.txAdvice" order="200" />
         -->

        <!--
        <aop:advisor pointcut="execution(* com.longtime.app.admin.course.service..*.*(..))" advice-ref="apps.dao.txAdvice" order="200" />
        <aop:advisor pointcut="execution(* com.longtime.app.admin.course.dao..*.*(..))" advice-ref="apps.dao.txAdvice" order="200" />

        <aop:advisor pointcut="execution(* com.longtime.app.base.service..*.*(..))" advice-ref="apps.dao.txAdvice" order="200" />
        <aop:advisor pointcut="execution(* com.longtime.app.base.dao..*.*(..))" advice-ref="apps.dao.txAdvice" order="200" />
         -->

    </aop:config>
</beans>